"use strict";(self.webpackChunkpingvindocs=self.webpackChunkpingvindocs||[]).push([[126],{6124:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"setup/configuration","title":"Configuration","description":"General configuration","source":"@site/docs/setup/configuration.md","sourceDirName":"setup","slug":"/setup/configuration","permalink":"/pingvin-share-x/setup/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/smp46/pingvin-share-x/edit/main/docs/docs/setup/configuration.md","tags":[],"version":"current","frontMatter":{"id":"configuration"},"sidebar":"docsSidebar","previous":{"title":"Installation","permalink":"/pingvin-share-x/setup/installation"},"next":{"title":"Integrations","permalink":"/pingvin-share-x/setup/integrations"}}');var t=i(4848),d=i(8453);const s={id:"configuration"},c="Configuration",o={},h=[{value:"General configuration",id:"general-configuration",level:2},{value:"UI",id:"ui",level:3},{value:"YAML file",id:"yaml-file",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:"Backend",id:"backend",level:4},{value:"Frontend",id:"frontend",level:4},{value:"Docker specific",id:"docker-specific",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsx)(n.h2,{id:"general-configuration",children:"General configuration"}),"\n",(0,t.jsx)(n.p,{children:"There are plenty of settings you can adjust to your needs. Pingvin Share X can be configured in two ways:"}),"\n",(0,t.jsx)(n.h3,{id:"ui",children:"UI"}),"\n",(0,t.jsxs)(n.p,{children:["You can change the settings in the UI (",(0,t.jsx)(n.code,{children:"/admin/config"}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"yaml-file",children:"YAML file"}),"\n",(0,t.jsx)(n.p,{children:"You can set the configuration via a YAML file. If you choose this way, you won't be able to change the settings in the UI."}),"\n",(0,t.jsxs)(n.p,{children:["If you use Docker you can create a ",(0,t.jsx)(n.code,{children:"config.yml"})," file based on the ",(0,t.jsx)(n.a,{href:"https://github.com/smp46/pingvin-share-x/blob/main/config.example.yaml",children:(0,t.jsx)(n.code,{children:"config.example.yaml"})})," and mount it to ",(0,t.jsx)(n.code,{children:"/opt/app/config.yaml"})," in the container."]}),"\n",(0,t.jsxs)(n.p,{children:["If you run Pingvin Share X without Docker, you can create a ",(0,t.jsx)(n.code,{children:"config.yml"})," file based on the ",(0,t.jsx)(n.a,{href:"https://github.com/smp46/pingvin-share-x/blob/main/config.example.yaml",children:(0,t.jsx)(n.code,{children:"config.example.yaml"})})," in the root directory of the project."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"environment-variables",children:"Environment variables"}),"\n",(0,t.jsx)(n.p,{children:"For installation specific configuration, you can use environment variables. The following variables are available:"}),"\n",(0,t.jsx)(n.h4,{id:"backend",children:"Backend"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"BACKEND_PORT"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"8080"})}),(0,t.jsx)(n.td,{children:"The port on which the backend listens."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DATABASE_URL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"file:../data/pingvin-share.db?connection_limit=1"})}),(0,t.jsx)(n.td,{children:"The URL of the SQLite database."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DATA_DIRECTORY"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"./data"})}),(0,t.jsx)(n.td,{children:"The directory where data is stored."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CONFIG_FILE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"../config.yaml"})}),(0,t.jsx)(n.td,{children:"Path to the configuration file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CLAMAV_HOST"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"127.0.0.1"})," or ",(0,t.jsx)(n.code,{children:"clamav"})," when running with Docker"]}),(0,t.jsxs)(n.td,{children:["The IP address of the ClamAV server. See the ",(0,t.jsx)(n.a,{href:"/pingvin-share-x/setup/integrations#clamav",children:"ClamAV docs"})," for more information."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CLAMAV_PORT"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"3310"})}),(0,t.jsx)(n.td,{children:"The port number of the ClamAV server."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PORT"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"3000"})}),(0,t.jsx)(n.td,{children:"The port on which the frontend listens."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"API_URL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"http://localhost:8080"})}),(0,t.jsx)(n.td,{children:"The URL of the backend for the frontend."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"docker-specific",children:"Docker specific"}),"\n",(0,t.jsx)(n.p,{children:"Environment variables that are only available when running Pingvin Share X with Docker."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TRUST_PROXY"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsxs)(n.td,{children:["Whether Pingvin Share X is behind a reverse proxy. If set to ",(0,t.jsx)(n.code,{children:"true"}),", the ",(0,t.jsx)(n.code,{children:"X-Forwarded-For"})," header is trusted."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CADDY_DISABLED"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsxs)(n.td,{children:["Configures if Pingvin Share X is starting built-in Caddy. If set to ",(0,t.jsx)(n.code,{children:"true"}),", Caddy will not be started. If disabled, you must configure your reverse proxy to correctly map all paths. Refer to the ",(0,t.jsx)(n.a,{href:"https://github.com/smp46/pingvin-share-x/blob/main/reverse-proxy/Caddyfile",children:"official Caddyfile"})," for guidance."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"PUID"})," and ",(0,t.jsx)(n.code,{children:"PGID"})]}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"1000"})}),(0,t.jsxs)(n.td,{children:["The user and group ID of the user who should run Pingvin Share X inside the Docker container and owns the files that are mounted with the volume. You can get the ",(0,t.jsx)(n.code,{children:"PUID"})," and ",(0,t.jsx)(n.code,{children:"GUID"})," of your user on your host machine by using the command ",(0,t.jsx)(n.code,{children:"id"}),". For more information see ",(0,t.jsx)(n.a,{href:"https://docs.linuxserver.io/general/understanding-puid-and-pgid/#using-the-variables",children:"this article"}),"."]})]})]})]})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var r=i(6540);const t={},d=r.createContext(t);function s(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);